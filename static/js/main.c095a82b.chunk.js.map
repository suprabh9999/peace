{"version":3,"sources":["components/navBar/index.js","components/tableViews/navigator/index.js","components/tableViews/searchBar/index.js","components/tableViews/tableView/markups/tableHeader.js","components/tableViews/tableView/markups/tableRow.js","components/tableViews/tableView/index.js","components/tableViews/pagination/index.js","components/tableViews/index.js","components/detailedView/index.js","utilities/sorting.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","handleBackClick","react_default","a","createElement","className","showBackBtn","style","border","cursor","backgroundColor","color","onClick","marginLeft","Navigator","handleNextClick","handlePreviousClick","SearchBar","activePaginationIndex","duplicateData","pageSize","startNum","endNum","length","searchLabel","concat","placeholder","onChange","searchNameHandler","value","TableHeader","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSortingState","heading","prevState","objectSpread","state","sortingState","key","sortingOrder","resetSortingIcon","setState","handleSorting","o","First Name","Last Name","Company Name","City","State","Zip","Email","Web","Age","HEADINGS","_this2","headingMarkUp","map","index","directionIcon","React","Component","TableRow","rowData","handleRowClick","id","first_name","last_name","company_name","city","zip","email","web","age","TableView","tableRows","responseData","markups_tableRow","markups_tableHeader","Pagination","paginationBtn","data","paginationStartIndex","handlePaginationClickChange","paginationButtons","paginationStartIndexIs","end","Math","ceil","_loop","handlePagination","push","clear","textAlign","TableViews","searchValue","Fragment","components_navBar","tableViews_searchBar","tableViews_tableView","components_tableViews_navigator","tableViews_pagination","personalDetails","arr","DetailedView","_props$detailedObj","detailedObj","CUSTOM_SORT","getAppropriateKey","sortInAsc","sortInDesc","i","j","swap","finalPosition","foundElementIndex","temp","App","event","finalArr","duplicateResTwo","filter","element","target","toLowerCase","indexOf","fn","response","slice","duplicateRes","cloneResTwo","toConsumableArray","find","history","goBack","cloneRes","sizeOfPages","startIndex","endIndex","p","operation","renderSwitch","pathName","location","pathname","split","components_detailedView","components_tableViews","fetch","res","json","withRouter","Boolean","window","hostname","match","ReactDOM","render","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c095a82b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nconst NavBar = (props) => {\r\n    const { handleBackClick } = props;\r\n    return (\r\n        <div className='navBar'>\r\n            { props.showBackBtn ? \r\n            <button style={{border:'none',cursor:'pointer', backgroundColor:'transparent',\r\n             color:'white'}} onClick={ handleBackClick }>\r\n                <i className=\"fas fa-arrow-left fa-lg\"></i>\r\n                <span style={{marginLeft:'20px'}}>Data Peace</span>\r\n            </button>\r\n            :\r\n            <span className='burgerMenu'>\r\n                <i className=\"fas fa-bars\"></i>\r\n                <span style={{marginLeft:'20px'}}>Data Peace</span>\r\n            </span> }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Navigator = ( props ) => {\r\n    const { handleNextClick, handlePreviousClick } = props;\r\n\r\n    return(\r\n        <div className='navigatorContainer'>\r\n            <div className='leftBtn'>\r\n                <button className='navigatorBtn' \r\n                    onClick={handlePreviousClick}>Previous</button>\r\n            </div>\r\n            <div className='rightBtn'>\r\n                <button className='navigatorBtn' \r\n                    onClick={handleNextClick}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigator;","import React from 'react';\r\nimport './index.css';\r\nconst SearchBar = ( props ) => {\r\n    const { activePaginationIndex, duplicateData, pageSize  }  = props;\r\n    const startNum = ( activePaginationIndex *  pageSize ) - pageSize + 1;\r\n    const endNum = startNum + pageSize - 1;\r\n    const length = duplicateData.length;\r\n    const searchLabel = `${startNum}-${endNum} of ${length}`;\r\n    return(\r\n        <div className='searchContainer row'>\r\n            <div>\r\n                <input className='searchInput' placeholder='Search by first name' \r\n                    onChange={props.searchNameHandler} value={props.value}/>\r\n            </div>\r\n            <div className='paginationCount'>\r\n                { searchLabel }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './tableHeader.css';\r\n\r\nclass TableHeader extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortingState : { 'First Name': 'asc', 'Last Name' :  'asc', 'Company Name' : 'asc',\r\n      'City' : 'asc', 'State' : 'asc', 'Zip' : 'asc', 'Email' : 'asc', 'Web' : 'asc', 'Age' : 'asc'  }\r\n    }\r\n    this.HEADINGS = ['First Name', 'Last Name', 'Company Name', 'City', 'State',\r\n    'Zip', 'Email', 'Web', 'Age']; \r\n    \r\n  }\r\n\r\n  handleSortingState = (heading) => {\r\n    const prevState = { ...this.state };\r\n    const sortingState = { key : null, sortingOrder : null };\r\n    sortingState.key = heading;\r\n    sortingState.sortingOrder = prevState.sortingState[heading];\r\n    prevState.sortingState[heading] = prevState.sortingState[heading] === 'asc' ? 'desc' : 'asc';\r\n    this.resetSortingIcon(heading, prevState);\r\n    this.setState(prevState, () => this.props.handleSorting(sortingState) );\r\n    \r\n  }\r\n    \r\n  resetSortingIcon = (heading, prevState) => {\r\n    for (let o in prevState.sortingState){\r\n      if(o !== heading)\r\n        prevState.sortingState[o] = 'asc';\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const headingMarkUp = this.HEADINGS.map((heading, index) => {\r\n\r\n      let directionIcon = this.state.sortingState[heading] === 'asc' ? <i className=\"fas fa-caret-down\"></i> :\r\n        <i className=\"fas fa-caret-up\"></i> ;\r\n      return( <th className='tableHeader' \r\n        onClick={() => this.handleSortingState(heading) } \r\n        key={index}> { directionIcon } {heading} \r\n        \r\n    </th>); });\r\n        return(\r\n          <tr>\r\n            { headingMarkUp }\r\n          </tr>\r\n      );\r\n  }\r\n};\r\nexport default TableHeader;","import React from 'react';\r\nimport './tableRow.css';\r\n\r\nconst TableRow = (props) => {\r\n  const { rowData } = props;\r\n  return(\r\n      <tr className='tableRow' onClick={()=>props.handleRowClick(props.rowData.id)}>\r\n        <td> { rowData.first_name } </td>\r\n        <td> { rowData.last_name } </td>\r\n        <td> { rowData.company_name } </td>\r\n        <td> { rowData.city } </td>\r\n        <td> { rowData.state } </td>\r\n        <td> { rowData.zip } </td>\r\n        <td> { rowData.email } </td>\r\n        <td style={{color:'#50a4f3'}} > { rowData.web } </td>\r\n        <td> { rowData.age } </td>\r\n      </tr>\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport './index.css';\r\nimport TableHeader from './markups/tableHeader';\r\nimport TableRow from './markups/tableRow';\r\n\r\nconst TableView = (props) => {\r\n  const tableRows = props.responseData.map((rowData, index) => <TableRow key={index} \r\n    rowData={rowData} handleRowClick={props.handleRowClick} />);\r\n  return(\r\n    <table>\r\n      <thead>\r\n        <TableHeader handleSorting={props.handleSorting} />\r\n      </thead>\r\n      <tbody>\r\n        { tableRows }\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableView;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Pagination = (props) => {\r\n    const { pageSize, data, activePaginationIndex, paginationStartIndex, handlePaginationClickChange } = props;\r\n    const paginationButtons = [];\r\n    let paginationBtn;\r\n    let className;\r\n    let paginationStartIndexIs = paginationStartIndex * 14 + 1;\r\n    let end = paginationStartIndexIs + 14 - 1;\r\n    end  = end > Math.ceil( data.length / pageSize ) ? Math.ceil(data.length / pageSize) : end; \r\n    for(let index=paginationStartIndexIs; index<=end; index++){\r\n        if(index === activePaginationIndex )\r\n            className = 'activePaginationBtn';\r\n        else\r\n            className = 'paginationBtn';\r\n        paginationBtn = <button key={index} className={className} \r\n            onClick={() => props.handlePagination(index)}>{ index }</button> ;\r\n\r\n            paginationButtons.push(paginationBtn);\r\n    }\r\n    return(\r\n        <h1 style={{clear:'both', textAlign:'center'}}>\r\n            <button className='paginationBtn' onClick={()=>handlePaginationClickChange('-')} > &laquo; </button>\r\n            { paginationButtons }\r\n            <button className='paginationBtn' onClick={()=>handlePaginationClickChange('+')} > &raquo; </button>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport NavBar from '../navBar';\r\nimport Navigator from './navigator';\r\nimport SearchBar from './searchBar';\r\nimport TableView from './tableView';\r\nimport './index.css';\r\nimport Pagination from './pagination';\r\n\r\nconst TableViews = (props) => {\r\n    const { responseData, activePaginationIndex, duplicateData,\r\n      searchNameHandler, handleNextClick, handlePreviousClick, handleRowClick, \r\n      handleSorting , handlePagination, pageSize, paginationStartIndex,\r\n      handlePaginationClickChange, searchValue } = props;\r\n\r\n    return(\r\n        <>\r\n          <NavBar />\r\n          <div className=\"appContainer\">\r\n            <SearchBar searchNameHandler={searchNameHandler} pageSize={pageSize} \r\n              value={searchValue}\r\n              activePaginationIndex={activePaginationIndex} duplicateData={duplicateData} />\r\n            <TableView\r\n              responseData={responseData}\r\n              handleRowClick={handleRowClick}\r\n              handleSorting={handleSorting}\r\n            />\r\n            <Navigator handleNextClick={handleNextClick} handlePreviousClick={handlePreviousClick} />\r\n            <Pagination data={ duplicateData } pageSize={pageSize} \r\n              activePaginationIndex={activePaginationIndex}\r\n              paginationStartIndex={paginationStartIndex}\r\n              handlePagination={handlePagination}\r\n              handlePaginationClickChange={handlePaginationClickChange} />\r\n          </div>\r\n        </>\r\n    );\r\n};\r\nexport default TableViews;\r\n","import React from 'react';\r\nimport NavBar from '../navBar';\r\nimport './index.css';\r\n\r\nconst DetailedView = (props) => {\r\n    const { age, city, company_name, email, first_name,\r\n        last_name, state, web, zip } = props.detailedObj;\r\n\r\n    const arr = [ ['Company', company_name ], ['City', city] ,['State', state],\r\n        ['Zip', zip], ['Email', email], ['Web', web], ['Age', age] ];\r\n\r\n    return(\r\n        <>\r\n            <NavBar showBackBtn handleBackClick={ props.handleBackClick } />\r\n            <div className='detailedViewContainer'>\r\n                <h2 className='nameField'>{`${first_name} ${last_name}`}</h2>\r\n            \r\n            { personalDetails (arr) }\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst personalDetails = (arr) => {\r\n    const markup = arr.map((data, index) => {\r\n        return(\r\n            <div key={index}>\r\n                <div className='personalDetail'>\r\n                    <div> { data[0] } </div>\r\n                    <div className='valueField'>{ data[1] }</div>\r\n                </div>\r\n                <div className='seperator' />\r\n            </div>\r\n        );\r\n    });\r\n    return markup;\r\n    \r\n}\r\n\r\nexport default DetailedView;","// Selection sort\r\nexport const CUSTOM_SORT = (data, sortingState) => {\r\n    let key = getAppropriateKey(sortingState.key);\r\n    if(sortingState.sortingOrder === 'asc')\r\n        sortInAsc(data, key);\r\n    else\r\n        sortInDesc(data, key);\r\n    return data;\r\n};  \r\n\r\nconst sortInDesc = (data, key) => {\r\n    for(let i = 0; i < data.length - 1; i++){\r\n        for(let j = i+1; j < data.length; j++){\r\n            if(data[j][key] > data[i][key]){\r\n                swap(data, i, j);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst sortInAsc = (data, key) => {\r\n    for(let i = 0; i < data.length - 1; i++){\r\n        for(let j = i+1; j < data.length; j++){\r\n            if(data[j][key] < data[i][key]){\r\n                swap(data, i, j);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst swap = (data, finalPosition, foundElementIndex) => {\r\n    const temp = data[finalPosition];\r\n    data[finalPosition] = data[foundElementIndex];\r\n    data[foundElementIndex] = temp;\r\n};\r\n\r\nconst getAppropriateKey = (key) => {\r\n    const KEYS = { \"First Name\" : \"first_name\", \"Last Name\" : \"last_name\",\r\n    \"Company Name\" : \"company_name\", \"City\" : \"city\", \"State\" : \"state\",\r\n    \"Zip\" : \"zip\", \"Email\" : \"email\", \"Web\" : \"web\", \"Age\" : \"age\" };\r\n    return KEYS[key];\r\n} \r\n\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport TableViews from './tableViews';\nimport DetailedView from \"./detailedView\";\nimport { CUSTOM_SORT } from '../utilities/sorting';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: [], duplicateRes: [], detailedObj : {}, cloneRes : [], paginationStartIndex : 0,\n      searchValue : ''\n    };\n    this.sizeOfPages = 5;\n    this.activePaginationIndex = 1; \n  }\n  async componentDidMount() {\n    const res = await fetch(\"https://demo9197058.mockable.io/users\");\n    const json = await res.json();\n    const sizeOfPages = this.sizeOfPages; \n    this.setState({\n      response: json.slice(0, sizeOfPages),\n      cloneRes : json.slice(0, sizeOfPages),\n      cloneResTwo : json.slice(0, sizeOfPages),\n      duplicateRes: json,\n      duplicateResTwo : json\n    });\n  }\n\n  componentWillMount(){\n    if( this.props.location.pathname.length > 1 )\n      this.props.history.push('/');\n  }\n\n  searchNameHandler = event => {\n    const state = { ...this.state };\n    const finalArr = state.duplicateResTwo.filter(element => {\n      if (event.target.value === \"\") return element;\n      else if ( element.first_name\n        .toLowerCase()\n        .indexOf(event.target.value.toLowerCase()) > -1 )\n        return element;\n      return null;\n    });\n    const fn = event.target.value ? {\n      response : finalArr.slice(0,5),\n      duplicateRes : finalArr,\n    }\n     :\n      {\n        response : state.cloneResTwo,\n        duplicateRes : state.duplicateResTwo,\n      }\n    this.setState({ ...fn, searchValue : event.target.value });\n  };\n\n  handleRowClick = id => {\n    const rowData = [ ...this.state.response ];\n    const detailedObj = rowData.find(element => element.id === id);\n    this.setState({ detailedObj }, () => this.props.history.push(`/user/${id}`) );\n  };\n\n  handleBackClick = () => {\n    this.props.history.goBack();\n  }\n\n  handleSorting = (sortingState) => {\n    const prevState = { ...this.state };\n    const data = CUSTOM_SORT(prevState.response, sortingState);\n    prevState.response = data;\n    prevState.cloneRes = data;\n    this.setState( prevState );\n  }\n\n  handlePagination = (index) => {\n    const pageSize = this.sizeOfPages;\n    const prevState = { ...this.state };\n    const startIndex = ( index * pageSize ) - pageSize;\n    const endIndex = startIndex + pageSize;\n    this.activePaginationIndex = index;\n    prevState.response = prevState.duplicateRes.slice(startIndex, endIndex);\n    prevState.cloneRes = prevState.duplicateRes.slice(startIndex, endIndex);;\n    this.setState(prevState);\n  }\n\n  handleNextClick = () => {\n    const p = Math.ceil( this.state.duplicateRes.length / this.sizeOfPages );\n    if(this.activePaginationIndex < p)\n      this.handlePagination(this.activePaginationIndex + 1 );\n  }\n  handlePreviousClick = () => {\n    if(this.activePaginationIndex > 1)\n      this.handlePagination(this.activePaginationIndex - 1 );\n  }\n\n  handlePaginationClickChange = (operation) =>{\n    const prevState = { ...this.state };\n    if(operation === '+'){\n      prevState.paginationStartIndex =  prevState.paginationStartIndex + 1;\n      if( (prevState.duplicateRes.length / 5  ) > (prevState.paginationStartIndex * 14 + 1) )\n        this.setState(prevState);\n    }\n    else{\n      prevState.paginationStartIndex =  prevState.paginationStartIndex - 1;\n      if(prevState.paginationStartIndex > -1 )\n        this.setState(prevState);\n    }\n  }\n\n  renderSwitch = () => {\n    const pathName = this.props.location.pathname;\n    const id = pathName.split('/')[2]; \n\n    switch ( pathName ) {\n      case `/user/${id}` :\n        return( <DetailedView detailedObj={this.state.detailedObj} \n          handleBackClick={this.handleBackClick} /> \n        );\n\n      default : \n        return (\n          <TableViews \n            activePaginationIndex={this.activePaginationIndex}\n            pageSize={this.sizeOfPages}\n            responseData={this.state.response}\n            duplicateData={this.state.duplicateRes}\n            paginationStartIndex={this.state.paginationStartIndex}\n            handleRowClick={this.handleRowClick}\n            handleSorting={this.handleSorting}\n            searchNameHandler={this.searchNameHandler} \n            handlePagination={this.handlePagination}\n            handleNextClick={this.handleNextClick}\n            handlePreviousClick={this.handlePreviousClick}\n            handlePaginationClickChange={this.handlePaginationClickChange}\n            searchValue={this.state.searchValue}\n            />\n        );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        { this.renderSwitch() }\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}